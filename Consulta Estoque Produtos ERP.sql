SELECT
	TRIM(D.FILIAL) AS FILIAL
	,REPLACE(D.COD_FILIAL,' ','') AS COD_FILIAL
	,TRIM(B.DESC_PRODUTO) AS DESC_PRODUTO
	--,TRIM(B.GRIFFE) AS GRIFFE
	,REPLACE(B.PRODUTO,' ','') AS PRODUTO
	,REPLACE(G.CODIGO_BARRA,' ','') AS CODIGO_BARRA
	,REPLACE(F.PRECO1,'.',',') AS PRECO
	,B.ECATALOGOSLOJA AS ENVIA_ECATALOGO_LOJA
	--Valida se possui pack montado
	,H.Q1 AS TAM_1
	,H.Q2 AS TAM_2
	,H.Q3 AS TAM_3
	,H.Q4 AS TAM_4
	,H.Q5 AS TAM_5
	,H.Q6 AS TAM_6
	,H.Q7 AS TAM_7
	,H.Q8 AS TAM_8
	,H.Q9 AS TAM_9
	,H.Q10 AS TAM_10
	,H.Q11 AS TAM_11
	,H.Q12 AS TAM_12
	,REPLACE(C.QTDE,' ','') AS QTDE_PACK
	,REPLACE(A.DISPONIVEL,' ','') AS ESTOQUE_TOTAL_ERP
	--,B.GRUPO_PRODUTO
	--,B.TIPO_PRODUTO
	--,B.DESC_PRODUTO
	--,''       AS COMPOSITION --não retorna dados 
	--,''       AS TECHNICAL_INFO --não retorna dados 
	--,B.CLASSIF_FISCAL
	--,E.DESC_COLECAO
FROM   MQ_ESTOQUE_DISPONIVEL_PEDIDO_NEW AS A
	INNER JOIN PRODUTOS AS B
		ON A.PRODUTO = B.PRODUTO
		--Verificar se os produtos estão na tabela de cadastro do integrador pro ecatalogo, quando não estiver nessa tabela, deve ser feito o insert do produto
		--AND  B.PRODUTO  IN (SELECT PRODUTO FROM MQ_INTEGRACAO_eCATALOGOS_LOJAS_PRODUTOS AS X 
		--				WHERE X.PRODUTO = B.PRODUTO )
		AND  B.eCataLogosLoja = 1
	INNER JOIN PRODUTOS_PACKS_PERMITIDOS AS C
		ON A.PRODUTO = C.PRODUTO
			AND A.COR_PRODUTO = C.COR_PRODUTO
	--Com LEFT JOIN trás os produtos que não tem o pack montado (Tamanhos com valor NULL)
	LEFT JOIN MQ_GRADE_PRODUCAO H
		ON H.PRODUTO = B.PRODUTO
	INNER JOIN FILIAIS AS D
		ON A.FILIAL = D.FILIAL
			AND D.ECATALOGOSLOJA = 1
	INNER JOIN COLECOES AS E
		ON B.COLECAO = E.COLECAO
	INNER JOIN PRODUTOS_PRECOS AS F
		ON B.PRODUTO = F.PRODUTO
			AND F.CODIGO_TAB_PRECO = '01'
	INNER JOIN PRODUTOS_BARRA AS G
		ON B.PRODUTO = G.PRODUTO
			AND G.CODIGO_BARRA LIKE '7%'
			AND A.COR_PRODUTO = G.COR_PRODUTO
WHERE   --A.DISPONIVEL >= C.QTDE
		B.eCataLogosLoja = 1
		AND A.DISPONIVEL >= 0
		--AND B.PRODUTO IN
		--(
		--'10.16.3779','29.09.0454'
		--)
		--AND D.COD_FILIAL = '000003'
ORDER BY B.PRODUTO DESC

/*
SELECT 
	TRIM(D.FILIAL) AS FILIAL
	,REPLACE(D.COD_FILIAL,' ','') AS COD_FILIAL
	,TRIM(B.DESC_PRODUTO) AS PRODUTO
	,TRIM(B.GRIFFE) AS GRIFFE
	--,B.GRUPO_PRODUTO
	--,B.TIPO_PRODUTO
	--,B.CLASSIF_FISCAL
	,TRIM(E.DESC_COLECAO) AS COLECAO
	--,F.PRECO1
	,REPLACE(B.PRODUTO,' ','') AS PRODUTO
	,REPLACE(G.CODIGO_BARRA,' ','') AS CODIGO_BARRA
	,D.ECATALOGOSLOJA AS ENVIA_ECATALOGO_LOJA
	,REPLACE(C.QTDE,' ','') AS QTDE_PACK
	,REPLACE(A.DISPONIVEL,' ','') AS ESTOQUE_TOTAL_ERP
FROM   MQ_ESTOQUE_DISPONIVEL_PEDIDO_NEW AS A
	INNER JOIN PRODUTOS AS B
		ON A.PRODUTO = B.PRODUTO
	INNER JOIN PRODUTOS_PACKS_PERMITIDOS AS C
		ON A.PRODUTO = C.PRODUTO
		--AND A.DISPONIVEL >= C.QTDE --valida estoque maior ou igual a quantidade do pack
	INNER JOIN FILIAIS AS D
		ON A.FILIAL = D.FILIAL
		AND D.ECATALOGOSLOJA = 1
	INNER JOIN COLECOES AS E
		ON B.COLECAO = E.COLECAO
	INNER JOIN PRODUTOS_PRECOS AS F
		ON B.PRODUTO = F.PRODUTO
		AND F.CODIGO_TAB_PRECO = '01'
	INNER JOIN PRODUTOS_BARRA AS G
		ON B.PRODUTO = G.PRODUTO
		AND G.CODIGO_BARRA LIKE '7%'
WHERE	B.eCatalogosLoja = '1'
	AND D.COD_FILIAL = '000056'
	--AND B.PRODUTO IN (
	--	'10.10.0112'
	--)
ORDER BY 10 

SELECT * FROM MQ_ESTOQUE_DISPONIVEL_PEDIDO_NEW WHERE PRODUTO = '10.10.0112'

-- ESTOQUE ENVIADO

SELECT B.DESC_PRODUTO,
       B.PRODUTO,
       B.GRIFFE,
       B.GRUPO_PRODUTO,
       D.COD_FILIAL,
       B.TIPO_PRODUTO,
       B.DESC_PRODUTO,
       ''       AS COMPOSITION,
       ''       AS TECHNICAL_INFO,
       B.CLASSIF_FISCAL,
       E.DESC_COLECAO,
       F.PRECO1,
 G.CODIGO_BARRA,
 A.DISPONIVEL,
 H.QTDE,
 D.FILIAL
FROM   MQ_ESTOQUE_DISPONIVEL_PEDIDO_NEW AS A
       INNER JOIN PRODUTOS AS B
               ON A.PRODUTO = B.PRODUTO
       INNER JOIN PRODUTOS_PACKS_PERMITIDOS AS C
               ON A.PRODUTO = C.PRODUTO
       INNER JOIN FILIAIS AS D
               ON A.FILIAL = D.FILIAL
                  AND D.ECATALOGOSLOJA = 1
       INNER JOIN COLECOES AS E
               ON B.COLECAO = E.COLECAO
       INNER JOIN PRODUTOS_PRECOS AS F
               ON B.PRODUTO = F.PRODUTO
                  AND F.CODIGO_TAB_PRECO = '01'
       INNER JOIN PRODUTOS_BARRA AS G
               ON B.PRODUTO = G.PRODUTO
                  AND G.CODIGO_BARRA LIKE '7%'
 INNER JOIN PRODUTOS_PACKS_PERMITIDOS AS H
 ON B.PRODUTO = H.PRODUTO
WHERE	B.eCatalogosLoja = '1'
AND	DISPONIVEL >= C.QTDE
*/
